
includes:
  - phar://phpstan.phar/conf/bleedingEdge.neon
  - phpstan-baseline.neon

parameters:
  ignoreErrors:
    - '/^Call to an undefined static method Stancer\\Core\\AbstractObject::[gs]et\w+\(\)/'
    - '/^Only booleans are allowed in/'
    - '/^Short ternary operator is not allowed/'

    - message: '/Unsafe usage of new static/'
      paths:
        - src/Config.php
        - src/Core/AbstractObject.php
        - src/Http/Uri.php
        - src/Payment.php
        - src/Traits/SearchTrait.php

    - message: '/^Variable (property access|method call|static method call)/'
      paths:
        - src/Core/AbstractObject.php
        - src/Core/Request.php
        - src/Http/Client.php
        - src/Payment.php
        - src/Traits/AliasTrait.php

  level: max

  paths:
    - src

  treatPhpDocTypesAsCertain: false

  typeAliases:
    DataModel: '''
      array{
        allowedValues?: string[] | class-string,
        coerce?: string,
        exception?: class-string,
        exportable?: bool,
        format?: string,
        list?: bool,
        restricted?: bool,
        required?: bool,
        size?: array{
          fixed?: int,
          min?: int,
          max?: int,
        },
        type: string,
        value?: mixed,
      }
    '''

    DataModelResolved: '''
      array{
        allowedValues: string[] | class-string | null,
        coerce: ?callable,
        exception: ?class-string,
        exportable: bool,
        format: ?callable,
        list: bool,
        restricted: bool,
        required: bool,
        size: array{
          fixed: ?int,
          min: ?int,
          max: ?int,
        },
        type: string,
        value: mixed,
      }
    '''

    DocumentationMethodParameters: '''
      array{
        method: array{
          desc: ?string,
          name: string,
          parameters: string[],
          return: string,
          stan: bool,
        },
      }
    '''

    DocumentationPropertyParameters: '''
      array{
        desc?: string,
        fullDesc?: string,
        generateMethodGetter?: bool,
        list?: bool,
        nullable?: bool,
        required?: bool,
        restricted?: bool,
        type?: string|string[],
        value?: mixed,
      }
    '''

    CreateExceptionParameters: '''
      array{
        code?: integer,
        message?: string,
        previous?: Throwable,
        request?: Psr\Http\Message\RequestInterface,
        response?: Psr\Http\Message\ResponseInterface,
        status?: integer,
      }
    '''

    PaymentChargeOptions: '''
      array{
        account_holder_name?: string,
        account_number?: string,
        id?: string,
        source: string|array{
          id?: string,
        },
      }
    '''

    PayoutResponse: '''
      array{
        amount: integer,
        created: integer,
        currency: string,
        date_bank?: integer,
        date_paym: integer,
        fees?: integer,
        id: string,
        live_mode: bool,
        payments?: array{
          amount: integer,
        },
        refunds?: array{
          amount: integer,
        },
        disputes?: array{
          amount: integer,
        },
        statement_description: string,
        status: string,
      }
    '''

    RequestOptions: '''
      array{
        body?: Psr\Http\Message\StreamInterface|string|null,
        headers?: array<string, string | string[]>,
        query?: array<string, mixed>,
        timeout?: integer,
      }
    '''

    SearchFilters: '''
      array{
        created?: DateTimeInterface|DatePeriod<DateTimeInterface, ?DateTimeInterface, int>|int,
        created_until?: DateTimeInterface|int,
        limit?: int,
        start?: int,
      }
    '''

    SearchResult: '''
      array{
        live_mode: bool,
        disputes?: mixed[],
        payments?: mixed[],
        range: array{
          end: int,
          has_more: bool,
          limit: int,
          start: int,
        },
        refunds?: mixed[],
      }
    '''

    UriComponents: '''
      array{
        fragment?: string,
        host?: string,
        path?: string,
        pass?: string|null,
        port?: integer|null,
        query?: string,
        scheme?: string,
        user?: string,
      }
    '''

  tmpDir: vendor/.cache/phpstan


services:
  -
    class: Stancer\PHPStan\Types\AbstractObjectDynamicReturnTypeExtension
    tags:
      - phpstan.broker.dynamicMethodReturnTypeExtension
